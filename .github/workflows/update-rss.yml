name: Update RSS Feed

on:
  schedule:
    # 毎日 UTC 0:00 (JST 9:00) に実行
    - cron: '0 0 * * *'
    # テスト用: 15分ごとに実行
    - cron: '*/15 * * * *'
  workflow_dispatch: # 手動実行も可能

permissions:
  contents: write
  pull-requests: write

jobs:
  update-rss:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: json, mbstring, xml
          tools: composer:v2

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --no-progress --no-interaction

      - name: Generate RSS feed
        run: php bin/console tts:rss:build --docs-dir=docs/rss --output-basename=index.xml

      - name: Check for changes
        id: check-changes
        run: |
          # テスト用: 常にPRを作成（差分チェックを無効化）
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Test mode: Always create PR"

          # 本番用の差分チェック（コメントアウト）
          # # Check RSS feed changes
          # RSS_CHANGED=false
          # if ! git diff --quiet docs/rss/index.xml; then
          #   RSS_CHANGED=true
          # fi
          #
          # # Check state content changes using contentHash
          # STATE_CHANGED=false
          # if [ -f var/state/tiktok-shop.json ]; then
          #   # Extract sources.contentHash and items array (excluding lastSeenAt)
          #   OLD_STATE=$(git show HEAD:var/state/tiktok-shop.json 2>/dev/null | jq -S '{sources: [.sources[]? | {url, contentHash}], items}' || echo '{"sources":[],"items":[]}')
          #   NEW_STATE=$(jq -S '{sources: [.sources[]? | {url, contentHash}], items}' var/state/tiktok-shop.json)
          #
          #   if [ "$OLD_STATE" != "$NEW_STATE" ]; then
          #     STATE_CHANGED=true
          #   fi
          # fi
          #
          # if [ "$RSS_CHANGED" = true ] || [ "$STATE_CHANGED" = true ]; then
          #   echo "has_changes=true" >> $GITHUB_OUTPUT
          #   echo "Changes detected (RSS: $RSS_CHANGED, State: $STATE_CHANGED)"
          # else
          #   echo "has_changes=false" >> $GITHUB_OUTPUT
          #   echo "No content changes detected"
          # fi

      - name: Create Pull Request
        if: steps.check-changes.outputs.has_changes == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore(rss): update TikTok Shop release notes - ${{ github.run_id }}"
          title: "📰 Update TikTok Shop Release Notes RSS Feed"
          body: |
            ## 🤖 Automated RSS Feed Update

            **Workflow Run**: [`#${{ github.run_id }}`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            **Triggered**: ${{ github.event_name }} at `${{ github.event.repository.updated_at }}`

            ### 📝 Changes

            - ✅ Updated RSS feed (`docs/rss/index.xml`)
            - ✅ Updated state file (`var/state/tiktok-shop.json`)

            ### 🔄 Auto-merge

            This PR will be automatically merged after CI passes.

            ---

            🤖 Generated by [GitHub Actions](https://github.com/features/actions)
          branch: automated/update-rss-${{ github.run_id }}
          delete-branch: true
          labels: automated
          sign-commits: true
          committer: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      - name: Enable auto-merge
        if: steps.check-changes.outputs.has_changes == 'true' && steps.create-pr.outputs.pull-request-number != ''
        run: |
          # CI完了後に自動的にマージ（merge commit）
          gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --merge --auto
        env:
          GH_TOKEN: ${{ github.token }}
